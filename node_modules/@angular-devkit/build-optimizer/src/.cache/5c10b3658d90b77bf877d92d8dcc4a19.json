{"remainingRequest":"/Users/humayunazazkhan/Desktop/carFoam/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/humayunazazkhan/Desktop/carFoam/node_modules/angularfire2/angularfire2.js","dependencies":[{"path":"/Users/humayunazazkhan/Desktop/carFoam/node_modules/angularfire2/angularfire2.js","mtime":1526485018000},{"path":"/Users/humayunazazkhan/Desktop/carFoam/node_modules/cache-loader/dist/cjs.js","mtime":1538684669051},{"path":"/Users/humayunazazkhan/Desktop/carFoam/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { InjectionToken } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport { Observable, queueScheduler as queue } from 'rxjs';\nimport { first } from 'rxjs/operators';\nexport var FirebaseOptionsToken = new InjectionToken('angularfire2.app.options');\nexport var FirebaseNameOrConfigToken = new InjectionToken('angularfire2.app.nameOrConfig');\nexport var RealtimeDatabaseURL = new InjectionToken('angularfire2.realtimeDatabaseURL');\nvar FirebaseZoneScheduler = /*@__PURE__*/ (function () {\n    function FirebaseZoneScheduler(zone, platformId) {\n        this.zone = zone;\n        this.platformId = platformId;\n    }\n    FirebaseZoneScheduler.prototype.schedule = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return this.zone.runGuarded(function () { return queue.schedule.apply(queue, args); });\n    };\n    FirebaseZoneScheduler.prototype.keepUnstableUntilFirst = function (obs$) {\n        var _this = this;\n        if (isPlatformServer(this.platformId)) {\n            return new Observable(function (subscriber) {\n                var noop = function () { };\n                var task = Zone.current.scheduleMacroTask('firebaseZoneBlock', noop, {}, noop, noop);\n                obs$.pipe(first()).subscribe(function () { return _this.zone.runOutsideAngular(function () { return task.invoke(); }); });\n                return obs$.subscribe(subscriber);\n            });\n        }\n        else {\n            return obs$;\n        }\n    };\n    FirebaseZoneScheduler.prototype.runOutsideAngular = function (obs$) {\n        var _this = this;\n        return new Observable(function (subscriber) {\n            return _this.zone.runOutsideAngular(function () {\n                return obs$.subscribe(function (value) { return _this.zone.run(function () { return subscriber.next(value); }); }, function (error) { return _this.zone.run(function () { return subscriber.error(error); }); }, function () { return _this.zone.run(function () { return subscriber.complete(); }); });\n            });\n        });\n    };\n    return FirebaseZoneScheduler;\n}());\nexport { FirebaseZoneScheduler };\n//# sourceMappingURL=angularfire2.js.map \n",null]}