{"remainingRequest":"/Users/humayunazazkhan/Desktop/carFoam/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/humayunazazkhan/Desktop/carFoam/node_modules/angular2-counto/src/counto.directive.js","dependencies":[{"path":"/Users/humayunazazkhan/Desktop/carFoam/node_modules/angular2-counto/src/counto.directive.js","mtime":1518200238000},{"path":"/Users/humayunazazkhan/Desktop/carFoam/node_modules/cache-loader/dist/cjs.js","mtime":1538684669051},{"path":"/Users/humayunazazkhan/Desktop/carFoam/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar CountoDirective = /*@__PURE__*/ (function () {\n    function CountoDirective() {\n        this.countoChange = new core_1.EventEmitter();\n        this.countoEnd = new core_1.EventEmitter();\n    }\n    Object.defineProperty(CountoDirective.prototype, \"duration\", {\n        set: function (duration) {\n            this._duration = parseFloat(duration);\n            this.run();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CountoDirective.prototype, \"countTo\", {\n        set: function (countTo) {\n            this._countTo = parseFloat(countTo);\n            this.run();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CountoDirective.prototype, \"countFrom\", {\n        set: function (countFrom) {\n            this._countFrom = parseFloat(countFrom);\n            this.run();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CountoDirective.prototype, \"step\", {\n        set: function (step) {\n            this._step = parseFloat(step);\n            this.run();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CountoDirective.prototype.run = function () {\n        var _this = this;\n        clearInterval(_this._timer);\n        if (isNaN(_this._duration)) {\n            return false;\n        }\n        if (isNaN(_this._step)) {\n            return false;\n        }\n        if (isNaN(_this._countFrom)) {\n            return false;\n        }\n        if (isNaN(_this._countTo)) {\n            return false;\n        }\n        if (_this._step <= 0) {\n            console.info('Step must be greater than 0.');\n            return false;\n        }\n        if (_this._duration <= 0) {\n            console.info('Duration must be greater than 0.');\n            return false;\n        }\n        if (_this._step > _this._duration * 1000) {\n            console.info('Step must be equal or smaller than duration.');\n            return false;\n        }\n        var intermediate = _this._countFrom;\n        var increment = Math.abs(_this._countTo - _this._countFrom) / ((_this._duration * 1000) / _this._step);\n        _this.countoChange.emit(intermediate);\n        _this._timer = setInterval(function () {\n            if (_this._countTo < _this._countFrom) {\n                if (intermediate <= _this._countTo) {\n                    clearInterval(_this._timer);\n                    _this.countoChange.emit(_this._countTo);\n                    _this.countoEnd.emit();\n                }\n                else {\n                    _this.countoChange.emit(intermediate);\n                    intermediate -= increment;\n                }\n            }\n            else {\n                if (intermediate >= _this._countTo) {\n                    clearInterval(_this._timer);\n                    _this.countoChange.emit(_this._countTo);\n                    _this.countoEnd.emit();\n                }\n                else {\n                    _this.countoChange.emit(intermediate);\n                    intermediate += increment;\n                }\n            }\n        }, _this._step);\n    };\n    CountoDirective.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[counto]'\n                },] },\n    ];\n    CountoDirective.propDecorators = {\n        \"countoChange\": [{ type: core_1.Output },],\n        \"countoEnd\": [{ type: core_1.Output },],\n        \"duration\": [{ type: core_1.Input },],\n        \"countTo\": [{ type: core_1.Input },],\n        \"countFrom\": [{ type: core_1.Input },],\n        \"step\": [{ type: core_1.Input },],\n    };\n    return CountoDirective;\n}());\nexports.CountoDirective = CountoDirective;\n",null]}